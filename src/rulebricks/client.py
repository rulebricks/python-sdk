# This file was auto-generated by Fern from our API Definition.

import typing

import httpx

from .core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .resources.assets.client import AssetsClient, AsyncAssetsClient
from .resources.decisions.client import AsyncDecisionsClient, DecisionsClient
from .resources.flows.client import AsyncFlowsClient, FlowsClient
from .resources.rules.client import AsyncRulesClient, RulesClient
from .resources.tests.client import AsyncTestsClient, TestsClient
from .resources.users.client import AsyncUsersClient, UsersClient
from .resources.values.client import AsyncValuesClient, ValuesClient


class RulebricksApi:
    def __init__(
        self,
        *,
        base_url: str,
        api_key: str,
        timeout: typing.Optional[float] = 60,
        httpx_client: typing.Optional[httpx.Client] = None
    ):
        self._client_wrapper = SyncClientWrapper(
            base_url=base_url,
            api_key=api_key,
            httpx_client=httpx.Client(timeout=timeout) if httpx_client is None else httpx_client,
        )
        self.rules = RulesClient(client_wrapper=self._client_wrapper)
        self.flows = FlowsClient(client_wrapper=self._client_wrapper)
        self.decisions = DecisionsClient(client_wrapper=self._client_wrapper)
        self.assets = AssetsClient(client_wrapper=self._client_wrapper)
        self.users = UsersClient(client_wrapper=self._client_wrapper)
        self.tests = TestsClient(client_wrapper=self._client_wrapper)
        self.values = ValuesClient(client_wrapper=self._client_wrapper)


class AsyncRulebricksApi:
    def __init__(
        self,
        *,
        base_url: str,
        api_key: str,
        timeout: typing.Optional[float] = 60,
        httpx_client: typing.Optional[httpx.AsyncClient] = None
    ):
        self._client_wrapper = AsyncClientWrapper(
            base_url=base_url,
            api_key=api_key,
            httpx_client=httpx.AsyncClient(timeout=timeout) if httpx_client is None else httpx_client,
        )
        self.rules = AsyncRulesClient(client_wrapper=self._client_wrapper)
        self.flows = AsyncFlowsClient(client_wrapper=self._client_wrapper)
        self.decisions = AsyncDecisionsClient(client_wrapper=self._client_wrapper)
        self.assets = AsyncAssetsClient(client_wrapper=self._client_wrapper)
        self.users = AsyncUsersClient(client_wrapper=self._client_wrapper)
        self.tests = AsyncTestsClient(client_wrapper=self._client_wrapper)
        self.values = AsyncValuesClient(client_wrapper=self._client_wrapper)
