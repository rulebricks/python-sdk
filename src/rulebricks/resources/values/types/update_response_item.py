# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ....core.datetime_utils import serialize_datetime
from .update_response_item_type import UpdateResponseItemType
from .update_response_item_value import UpdateResponseItemValue

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class UpdateResponseItem(pydantic.BaseModel):
    id: typing.Optional[str] = pydantic.Field(description="Unique identifier for the dynamic value.")
    name: typing.Optional[str] = pydantic.Field(description="Name of the dynamic value.")
    type: typing.Optional[UpdateResponseItemType] = pydantic.Field(description="Data type of the dynamic value.")
    value: typing.Optional[UpdateResponseItemValue] = pydantic.Field(description="Value of the dynamic value.")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        json_encoders = {dt.datetime: serialize_datetime}
