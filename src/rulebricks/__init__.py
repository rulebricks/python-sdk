# This file was auto-generated by Fern from our API Definition.
# This file was auto-generated by Fern from our API Definition.
from .client import RulebricksApi, AsyncRulebricksApi
from .types import BadRequestErrorBody, ForbiddenErrorBody, InternalServerErrorBody, NotFoundErrorBody
from .errors import BadRequestError, ForbiddenError, InternalServerError, NotFoundError
from .resources import (
    CreateFlowTestResponse,
    CreateGroupResponse,
    CreateRuleTestResponse,
    DeleteDynamicValueResponse,
    DeleteFlowTestResponse,
    DeleteFolderResponse,
    DeleteRuleResponse,
    DeleteRuleTestResponse,
    ImportRuleResponse,
    InviteRequestRole,
    InviteResponse,
    ListDynamicValuesResponseItem,
    ListDynamicValuesResponseItemType,
    ListDynamicValuesResponseItemUsagesItem,
    ListDynamicValuesResponseItemValue,
    ListFlowTestsResponseItem,
    ListFoldersResponseItem,
    ListGroupsResponseItem,
    ListRuleTestsResponseItem,
    ListRulesResponseItem,
    ListRulesResponseItemFolder,
    ListResponseItem,
    QueryResponse,
    UpdateRequestValue,
    UpdateResponseItem,
    UpdateResponseItemType,
    UpdateResponseItemValue,
    UpsertFolderResponse,
    UsageResponse,
    assets,
    decisions,
    flows,
    rules,
    tests,
    users,
    values,
)

from .resources.rules.client import RulesClient, AsyncRulesClient
from .resources.flows.client import FlowsClient, AsyncFlowsClient
from .forge import Rule, Condition

class Config:
    api_key: str = ""
    base_url: str = "https://rulebricks.com"
    timeout: float = 10

# Initialize the API clients immediately when the module is loaded
sync_api = RulebricksApi(base_url=Config.base_url, api_key=Config.api_key, timeout=Config.timeout)
async_api = AsyncRulebricksApi(base_url=Config.base_url, api_key=Config.api_key, timeout=Config.timeout)

rules = sync_api.rules
flows = sync_api.flows
assets = sync_api.assets
decisions = sync_api.decisions
tests = sync_api.tests
users = sync_api.users
values = sync_api.values

def configure(api_key: str = "", base_url: str = "https://rulebricks.com", timeout: float = 10.0):
    """Configure your Rulebricks API client. This needs to be called before using other Rulebricks methods."""
    Config.api_key = api_key
    Config.base_url = base_url
    Config.timeout = timeout

    # Reinitialize clients with new config
    global sync_api, async_api
    sync_api = RulebricksApi(base_url=Config.base_url, api_key=Config.api_key, timeout=Config.timeout)
    async_api = AsyncRulebricksApi(base_url=Config.base_url, api_key=Config.api_key, timeout=Config.timeout)

    global rules, flows, assets, decisions, tests, users, values
    rules = sync_api.rules
    flows = sync_api.flows
    assets = sync_api.assets
    decisions = sync_api.decisions
    tests = sync_api.tests
    users = sync_api.users
    values = sync_api.values

__all__ = [
    "BadRequestError",
    "BadRequestErrorBody",
    "CreateFlowTestResponse",
    "CreateGroupResponse",
    "CreateRuleTestResponse",
    "DeleteDynamicValueResponse",
    "DeleteFlowTestResponse",
    "DeleteFolderResponse",
    "DeleteRuleResponse",
    "DeleteRuleTestResponse",
    "ForbiddenError",
    "ForbiddenErrorBody",
    "ImportRuleResponse",
    "InternalServerError",
    "InternalServerErrorBody",
    "InviteRequestRole",
    "InviteResponse",
    "ListDynamicValuesResponseItem",
    "ListDynamicValuesResponseItemType",
    "ListDynamicValuesResponseItemUsagesItem",
    "ListDynamicValuesResponseItemValue",
    "ListFlowTestsResponseItem",
    "ListFoldersResponseItem",
    "ListGroupsResponseItem",
    "ListRuleTestsResponseItem",
    "ListRulesResponseItem",
    "ListRulesResponseItemFolder",
    "ListResponseItem",
    "NotFoundError",
    "NotFoundErrorBody",
    "QueryResponse",
    "UpdateRequestValue",
    "UpdateResponseItem",
    "UpdateResponseItemType",
    "UpdateResponseItemValue",
    "UpsertFolderResponse",
    "UsageResponse",
    "assets",
    "decisions",
    "flows",
    "rules",
    "tests",
    "users",
    "values",
    "configure",
]
