# This file was auto-generated by Fern from our API Definition.
from .client import RulebricksApi, AsyncRulebricksApi
from .errors import BadRequestError, InternalServerError
from .resources import (
    ListResponseItem,
    ListResponseItemRequestSchemaItem,
    ListResponseItemResponseSchemaItem,
    UsageResponse,
    flows,
    rules,
)

class Config:
    api_key = None
    base_url = "https://rulebricks.com"

def set_api_key(api_key):
    Config.api_key = api_key

def set_instance_url(base_url):
    Config.base_url = base_url

# Wrapper class to access synchronous API methods
class SyncAPI:
    _api_instance = None

    @classmethod
    def get_instance(cls):
        if cls._api_instance is None:
            if Config.api_key is None:
                raise ValueError("API key not set. Use set_api_key() to initialize.")
            cls._api_instance = RulebricksApi(base_url=Config.base_url, api_key=Config.api_key)
        return cls._api_instance

    def __getattr__(self, name):
        return getattr(self.get_instance(), name)

# Wrapper class to access asynchronous API methods
class AsyncAPI:
    _api_instance = None

    @classmethod
    async def get_instance(cls):
        if cls._api_instance is None:
            if Config.api_key is None:
                raise ValueError("API key not set. Use set_api_key() to initialize.")
            cls._api_instance = AsyncRulebricksApi(base_url=Config.base_url, api_key=Config.api_key)
        return cls._api_instance

    def __getattr__(self, name):
        async def async_method(*args, **kwargs):
            instance = await self.get_instance()
            func = getattr(instance, name)
            return await func(*args, **kwargs)
        return async_method

# Top-level module interface
class Rulebricks:
    def __init__(self):
        self.asynchronous = AsyncAPI()

    def __getattr__(self, item):
        return getattr(SyncAPI(), item)

# Replacing the module with an instance of Rulebricks
import sys
sys.modules[__name__] = Rulebricks()

__all__ = [
    "BadRequestError",
    "InternalServerError",
    "ListResponseItem",
    "ListResponseItemRequestSchemaItem",
    "ListResponseItemResponseSchemaItem",
    "UsageResponse",
    "flows",
    "rules",
]
