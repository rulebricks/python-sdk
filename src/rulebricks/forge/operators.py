from enum import Enum
from dataclasses import dataclass, field
from typing import List, Dict

@dataclass
class Operator:
    name: str
    args: List[Dict[str, str]] = field(default_factory=list)

class BooleanOperator(Enum):
    ANY = Operator("any")
    IS_TRUE = Operator("is true")
    IS_FALSE = Operator("is false")

class NumberOperator(Enum):
    ANY = Operator("any")
    EQUALS = Operator("equals", [{"name": "value", "type": "number"}])
    DOES_NOT_EQUAL = Operator("does not equal", [{"name": "value", "type": "number"}])
    GREATER_THAN = Operator("greater than", [{"name": "bound", "type": "number"}])
    LESS_THAN = Operator("less than", [{"name": "bound", "type": "number"}])
    GREATER_THAN_OR_EQUAL_TO = Operator("greater than or equal to", [{"name": "bound", "type": "number"}])
    LESS_THAN_OR_EQUAL_TO = Operator("less than or equal to", [{"name": "bound", "type": "number"}])
    BETWEEN = Operator("between", [{"name": "start", "type": "number"}, {"name": "end", "type": "number"}])
    NOT_BETWEEN = Operator("not between", [{"name": "start", "type": "number"}, {"name": "end", "type": "number"}])
    IS_EVEN = Operator("is even")
    IS_ODD = Operator("is odd")
    IS_POSITIVE = Operator("is positive")
    IS_NEGATIVE = Operator("is negative")
    IS_ZERO = Operator("is zero")
    IS_NOT_ZERO = Operator("is not zero")
    IS_MULTIPLE_OF = Operator("is a multiple of", [{"name": "multiple", "type": "number"}])
    IS_NOT_MULTIPLE_OF = Operator("is not a multiple of", [{"name": "multiple", "type": "number"}])
    IS_POWER_OF = Operator("is a power of", [{"name": "base", "type": "number"}])

class StringOperator(Enum):
    ANY = Operator("any")
    CONTAINS = Operator("contains", [{"name": "value", "type": "string"}])
    DOES_NOT_CONTAIN = Operator("does not contain", [{"name": "value", "type": "string"}])
    EQUALS = Operator("equals", [{"name": "value", "type": "string"}])
    DOES_NOT_EQUAL = Operator("does not equal", [{"name": "value", "type": "string"}])
    IS_EMPTY = Operator("is empty")
    IS_NOT_EMPTY = Operator("is not empty")
    STARTS_WITH = Operator("starts with", [{"name": "value", "type": "string"}])
    ENDS_WITH = Operator("ends with", [{"name": "value", "type": "string"}])
    IS_INCLUDED_IN = Operator("is included in", [{"name": "value", "type": "list"}])
    IS_NOT_INCLUDED_IN = Operator("is not included in", [{"name": "value", "type": "list"}])
    CONTAINS_ANY_OF = Operator("contains any of", [{"name": "value", "type": "list"}])
    DOES_NOT_CONTAIN_ANY_OF = Operator("does not contain any of", [{"name": "value", "type": "list"}])
    IS_OF_LENGTH = Operator("is of length", [{"name": "length", "type": "number"}])
    IS_NOT_OF_LENGTH = Operator("is not of length", [{"name": "length", "type": "number"}])
    IS_LONGER_THAN = Operator("is longer than", [{"name": "length", "type": "number"}])
    IS_SHORTER_THAN = Operator("is shorter than", [{"name": "length", "type": "number"}])
    IS_LONGER_THAN_OR_EQUAL_TO = Operator("is longer than or equal to", [{"name": "length", "type": "number"}])
    IS_SHORTER_THAN_OR_EQUAL_TO = Operator("is shorter than or equal to", [{"name": "length", "type": "number"}])
    MATCHES_REGEX = Operator("matches RegEx", [{"name": "regex", "type": "string"}])
    DOES_NOT_MATCH_REGEX = Operator("does not match RegEx", [{"name": "regex", "type": "string"}])
    IS_VALID_EMAIL = Operator("is a valid email address")
    IS_NOT_VALID_EMAIL = Operator("is not a valid email address")
    IS_VALID_URL = Operator("is a valid URL")
    IS_NOT_VALID_URL = Operator("is not a valid URL")
    IS_VALID_IP = Operator("is a valid IP address")
    IS_NOT_VALID_IP = Operator("is not a valid IP address")

class DateOperator(Enum):
    ANY = Operator("any")
    IS_IN_THE_PAST = Operator("is in the past")
    IS_IN_THE_FUTURE = Operator("is in the future")
    DAYS_AGO = Operator("days ago", [{"name": "value", "type": "number"}])
    IS_LESS_THAN_N_DAYS_AGO = Operator("is less than N days ago", [{"name": "value", "type": "number"}])
    IS_MORE_THAN_N_DAYS_AGO = Operator("is more than N days ago", [{"name": "value", "type": "number"}])
    DAYS_FROM_NOW = Operator("days from now", [{"name": "value", "type": "number"}])
    IS_LESS_THAN_N_DAYS_FROM_NOW = Operator("is less than N days from now", [{"name": "value", "type": "number"}])
    IS_MORE_THAN_N_DAYS_FROM_NOW = Operator("is more than N days from now", [{"name": "value", "type": "number"}])
    IS_TODAY = Operator("is today")
    IS_THIS_WEEK = Operator("is this week")
    IS_THIS_MONTH = Operator("is this month")
    IS_THIS_YEAR = Operator("is this year")
    IS_NEXT_WEEK = Operator("is next week")
    IS_NEXT_MONTH = Operator("is next month")
    IS_NEXT_YEAR = Operator("is next year")
    IS_LAST_WEEK = Operator("is last week")
    IS_LAST_MONTH = Operator("is last month")
    IS_LAST_YEAR = Operator("is last year")
    AFTER = Operator("after", [{"name": "value", "type": "date"}])
    ON_OR_AFTER = Operator("on or after", [{"name": "value", "type": "date"}])
    BEFORE = Operator("before", [{"name": "value", "type": "date"}])
    ON_OR_BEFORE = Operator("on or before", [{"name": "value", "type": "date"}])
    BETWEEN = Operator("between", [{"name": "lower", "type": "date"}, {"name": "upper", "type": "date"}])
    NOT_BETWEEN = Operator("not between", [{"name": "lower", "type": "date"}, {"name": "upper", "type": "date"}])
    EQUALS = Operator("equals", [{"name": "value", "type": "date"}])
    DOES_NOT_EQUAL = Operator("does not equal", [{"name": "value", "type": "date"}])

class ListOperator(Enum):
    ANY = Operator("any")
    CONTAINS = Operator("contains", [{"name": "value", "type": "generic"}])
    IS_EMPTY = Operator("is empty")
    IS_NOT_EMPTY = Operator("is not empty")
    IS_OF_LENGTH = Operator("is of length", [{"name": "length", "type": "number"}])
    IS_NOT_OF_LENGTH = Operator("is not of length", [{"name": "length", "type": "number"}])
    IS_LONGER_THAN = Operator("is longer than", [{"name": "length", "type": "number"}])
    IS_SHORTER_THAN = Operator("is shorter than", [{"name": "length", "type": "number"}])
    IS_LONGER_THAN_OR_EQUAL_TO = Operator("is longer than or equal to", [{"name": "length", "type": "number"}])
    IS_SHORTER_THAN_OR_EQUAL_TO = Operator("is shorter than or equal to", [{"name": "length", "type": "number"}])
    CONTAINS_ALL_OF = Operator("contains all of", [{"name": "values", "type": "list"}])
    CONTAINS_ANY_OF = Operator("contains any of", [{"name": "values", "type": "list"}])
    CONTAINS_NONE_OF = Operator("contains none of", [{"name": "values", "type": "list"}])
    DOES_NOT_CONTAIN = Operator("does not contain", [{"name": "value", "type": "generic"}])
    IS_EQUAL_TO = Operator("is equal to", [{"name": "list", "type": "list"}])
    IS_NOT_EQUAL_TO = Operator("is not equal to", [{"name": "list", "type": "list"}])
    CONTAINS_DUPLICATES = Operator("contains duplicates")
    DOES_NOT_CONTAIN_DUPLICATES = Operator("does not contain duplicates")
