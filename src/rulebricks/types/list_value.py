# This file was auto-generated by Fern from our API Definition.

from .dynamic_value_base import DynamicValueBase
import typing
from .list_value_value_item import ListValueValueItem
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ListValue(DynamicValueBase):
    value: typing.Optional[typing.List[ListValueValueItem]] = pydantic.Field(
        default=None
    )
    """
    The list value
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
