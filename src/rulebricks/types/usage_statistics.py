# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UsageStatistics(UniversalBaseModel):
    plan: typing.Optional[str] = pydantic.Field(default=None)
    """
    The current plan of the organization.
    """

    monthly_period_start: typing.Optional[str] = pydantic.Field(default=None)
    """
    The start date of the current monthly period.
    """

    monthly_period_end: typing.Optional[str] = pydantic.Field(default=None)
    """
    The end date of the current monthly period.
    """

    monthly_executions_usage: typing.Optional[float] = pydantic.Field(default=None)
    """
    The number of rule executions used this month.
    """

    monthly_executions_limit: typing.Optional[float] = pydantic.Field(default=None)
    """
    The total number of rule executions allowed this month.
    """

    monthly_executions_remaining: typing.Optional[float] = pydantic.Field(default=None)
    """
    The number of rule executions remaining this month.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
