# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class FlowExecutionError(UniversalBaseModel):
    """
    Error response when flow execution fails
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message describing what went wrong during flow execution
    """

    node: typing.Optional[str] = pydantic.Field(default=None)
    """
    Identifier of the node where the error occurred (if applicable)
    """

    details: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = (
        pydantic.Field(default=None)
    )
    """
    Additional error details
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
