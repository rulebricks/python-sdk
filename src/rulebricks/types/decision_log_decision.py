# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .decision_log_decision_conditions_item_value import (
    DecisionLogDecisionConditionsItemValue,
)
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class DecisionLogDecision(UniversalBaseModel):
    conditions: typing.Optional[
        typing.List[typing.Dict[str, DecisionLogDecisionConditionsItemValue]]
    ] = None
    success_idxs: typing_extensions.Annotated[
        typing.Optional[typing.List[int]], FieldMetadata(alias="successIdxs")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
