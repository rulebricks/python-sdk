# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class DecisionLogRequest(UniversalBaseModel):
    ip: typing.Optional[str] = pydantic.Field(default=None)
    """
    IP address of the requester
    """

    method: typing.Optional[str] = pydantic.Field(default=None)
    """
    HTTP method used
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of the rule executed
    """

    endpoint: typing.Optional[str] = pydantic.Field(default=None)
    """
    API endpoint called
    """

    params: typing.Optional[typing.Dict[str, typing.List[str]]] = None
    data: typing.Optional[typing.Optional[typing.Any]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
