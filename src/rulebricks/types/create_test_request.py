# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CreateTestRequest(UniversalBaseModel):
    name: str = pydantic.Field()
    """
    The name of the test.
    """

    request: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    The request object for the test.
    """

    response: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    The expected response object for the test.
    """

    critical: bool = pydantic.Field()
    """
    Indicates whether the test is critical.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
